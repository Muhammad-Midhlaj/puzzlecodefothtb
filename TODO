- Redesign the level unlocker system to make it less linear. I.e. you should
 be able to unlock world X once you've reached some arbitary state in the
 campaign
- Have resume button be highlighted in blue (for accidental clicks on pause)

- Need major work on usability / instructions / walkthroughs.
-- Idea for button semantics:
--- Reset: resets the state to initial state and compiles program
--- Run / pause /resume button
---- If the board has been reset, the button will say "run."
------ If there is a compile error, then run will be grayed out and not
       clicable
------ If no compile errors, it's blue and can be clicked
---- once play begins, it turns into a normal colored pause button.
     Pressing pause will pause the game and change the button to a "resume"
     button.
---- resume unpauses the game.
-- Idea: recompile after every character, but only update line comments if
   there is no error. This way as soon as you type the fourth letter in "move"
   you will get the help text (but you won't get errors as you type it)
-- Perhaps present a popup alert the first time you get a compile error
-- Add a "step" button
-- Highlight instructions as they are being executed.
-- Allow user to click on lines to insert break points, which display the
   "pause" button next to the line.
- Implement instructions
- Unit tests
- Puzzle system. Each puzzle contains
-- board map (e.g. coins, blocks)
-- constraints (e.g. available instructions, max program size, max cycles
    before timeout)
-- win conditions (e.g. collect N coins, stop on an exit square, )
-- description: describe the puzzle to the user
-- tips (e.g., explain the "move" instruction, how to compile program, etc.)
- Idea: Campaign format
-- Campaign is composed of a series of "worlds.""
-- Each world contains a series of puzzles. Beating certain puzzles
   opens up access to other worlds. E.g. there might be 10 puzzles in the
   "move / turn" world, but you only need to beat the 3rd to get access to the
   next world. The other 7 are optional.
- Use consistent object-creation idoms
- Multi-cycle instructions
- Use cloneDeep instead of clone, where appropriate